{"version":3,"sources":["constants/index.js","components/leaderboardsTable/index.js","components/leaderboadrsWrap/index.js","redux/actionTypes.js","api/api.js","redux/actions/stats.js","pages/leaderboardsPage/index.js","components/matchesDate/index.js","components/matchesItemTeam/index.js","components/matchesItem/index.js","components/matchesList/index.js","pages/matchesPage/index.js","components/matchTeam/index.js","components/matchStats/index.js","components/matchPeriodStats/index.js","components/matchDetailsWrap/index.js","pages/matchDetailsPage/index.js","components/teamDetailsTitle/index.js","components/teamDetailsItem/index.js","components/teamDetailsWrap/index.js","pages/teamDetailsPage/index.js","components/header/index.js","components/loading/index.js","App.js","redux/reducers/stats.js","redux/reducers/general.js","redux/store.js","index.js"],"names":["urlConstants","date","getFullYear","getMonth","slice","getDate","tricode","toLowerCase","TEAM_NAMES","USA","WLD","EST","WST","GNS","LBN","DRT","AFR","ADL","ATL","BJD","BOS","BKN","CHA","CHI","CLE","DAL","DEN","DET","GSW","GUA","MAC","HOU","IND","LAC","LAL","MEL","MEM","MIA","MIL","MIN","NOP","NYK","NZB","OKC","ORL","PER","PHI","PHX","POR","FLA","SAC","SAS","SDS","SYD","TOR","UTA","WAS","LeaderboardsTable","data","name","TableContainer","className","component","Paper","Typography","align","variant","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","idx","scope","to","win","loss","winPctV2","prototype","PropTypes","string","arrayOf","shape","LeaderboardsWrap","standingsConference","useSelector","state","stats","east","west","normalizeTableData","arr","teamSitesOnly","teamTricode","Grid","container","justify","spacing","item","xs","START_LOADING","FINISH_LOADING","SET_GAMES_BY_DAY","SET_GAME_DETAILS","SET_STANDINGS_CONFERENCE","callApi","endpoint","url","fetch","then","res","text","JSON","parse","getMatchDetails","gameId","getGamesByDay","fetchGamesByDay","dispatch","a","type","types","Api","games","gamesByDay","fetchMatchDetails","basicGameData","matchDetails","fetchStandingsConference","league","standard","conference","LeaderboardsPage","useDispatch","useEffect","getStandingsConference","Object","keys","length","MatchesDate","today","handlerDate","dateTitle","CardContent","alignItems","IconButton","onClick","toDateString","object","func","MatchesItemTeam","score","color","MatchesItem","hTeamWin","vTeamWin","hTeamScore","vTeamScore","hTeamName","vTeamName","hTeamLoss","vTeamLoss","MatchesList","useRouteMatch","teamName","triCode","List","hTeam","vTeam","MatchesPage","useState","Date","setHandlerDate","dateToRequest","Container","maxWidth","Card","offset","changeDate","updatedDate","setDate","Divider","MatchTeam","imgUrl","teamWinLoss","CardMedia","image","title","MatchStats","hTeamTriCode","vTeamTriCode","period","MatchPeriodStats","P1","P2","P3","P4","MatchDetailsWrap","hTeamLinescore","linescore","vTeamLinescore","normalizeTeamLinescore","reduce","acc","periodName","updatedHTeamLinescore","updatedVTeamLinescore","matchScore","statusNum","clock","MatchDetailsPage","params","TeamDetailsItem","points","chartValue","normalizeChartData","value","Number","data-for","data-tip","label","dataEntry","labelPosition","labelStyle","fontSize","fontFamily","fill","lineWidth","startAngle","totalValue","TeamDetailsWrap","teamInfo","playedMatches","String","TeamDetailsPage","currentTeam","find","team","Header","style","padding","Button","Link","margin","Loading","activeClassName","general","isLoading","CircularProgress","App","exact","path","initialState","rootReducer","combineReducers","action","statsError","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","InitStore","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.754a5058.chunk.js","sourcesContent":["\nexport const urlConstants = {\n\n    FORMAT_DATE: (date) => date.getFullYear() + ('0' + (date.getMonth() + 1)).slice(-2) + ('0' + date.getDate()).slice(-2),\n\n    GET_TEAM_LOGO: (tricode) => `https://www.nba.com/.element/img/1.0/teamsites/logos/teamlogos_500x500/${tricode.toLowerCase()}.png`,\n\n    API_BASE: 'http://data.nba.net/10s/prod',\n\n};\n\nexport const TEAM_NAMES = {\n    USA: 'USA',\n    WLD: 'World',\n    EST: 'All-Stars',\n    WST: 'All-Stars',\n    GNS: 'Team Giannis',\n    LBN: 'Team LeBron',\n    DRT: 'Team K D',\n    AFR: 'Team Africa',\n    ADL: 'Adelaide 36ers',\n    ATL: 'Atlanta Hawks',\n    BJD: 'Beijing Ducks',\n    BOS: 'Boston Celtics',\n    BKN: 'Brooklyn Nets',\n    CHA: 'Charlotte Hornets',\n    CHI: 'Chicago Bulls',\n    CLE: 'Cleveland Cavaliers',\n    DAL: 'Dallas Mavericks',\n    DEN: 'Denver Nuggets',\n    DET: 'Detroit Pistons',\n    GSW: 'Golden State Warriors',\n    GUA: 'Guangzhou Long-Lions',\n    MAC: 'Maccabi Haifa',\n    HOU: 'Houston Rockets',\n    IND: 'Indiana Pacers',\n    LAC: 'LA Clippers',\n    LAL: 'Los Angeles Lakers',\n    MEL: 'Melbourne United',\n    MEM: 'Memphis Grizzlies',\n    MIA: 'Miami Heat',\n    MIL: 'Milwaukee Bucks',\n    MIN: 'Minnesota Timberwolves',\n    NOP: 'New Orleans Pelicans',\n    NYK: 'New York Knicks',\n    NZB: 'New Zealand Breakers',\n    OKC: 'Oklahoma City Thunder',\n    ORL: 'Orlando Magic',\n    PER: 'Perth Wildcats',\n    PHI: 'Philadelphia 76ers',\n    PHX: 'Phoenix Suns',\n    POR: 'Portland Trail Blazers',\n    FLA: 'Rio de Janeiro Flamengo',\n    SAC: 'Sacramento Kings',\n    SAS: 'San Antonio Spurs',\n    SDS: 'Shanghai Sharks',\n    SYD: 'Sydney Kings',\n    TOR: 'Toronto Raptors',\n    UTA: 'Utah Jazz',\n    WAS: 'Washington Wizards',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { TEAM_NAMES } from '../../constants';\n\nconst LeaderboardsTable = ({data = [], name}) => {\n    return (\n        <TableContainer\n            className = 'table'\n            component = { Paper }>\n            <Typography\n                align = 'center'\n                variant = 'h3'>\n                {name}\n            </Typography>\n            <Table\n                aria-label = 'leaderboardsTable'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align = 'center'>№</TableCell>\n                        <TableCell align = 'center'>Team</TableCell>\n                        <TableCell align = 'center'>Win</TableCell>\n                        <TableCell align = 'center'>Loss</TableCell>\n                        <TableCell align = 'center'>PPC</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((row, idx) => (\n                        <TableRow\n                            className = 'leaderboardsTable__row'\n                            key = { row.name }>\n                            <TableCell\n                                component = 'th'\n                                scope = 'row'>\n                                {`${idx + 1}`}\n                            </TableCell>\n                            <TableCell align = 'center'>\n                                <Link\n                                    className = 'leaderboardsTable__link'\n                                    to = { `/teams/${row.name.toLowerCase()}` }>\n                                    {TEAM_NAMES[ row.name ]}\n                                </Link>\n                            </TableCell>\n                            <TableCell align = 'center'>{row.win}</TableCell>\n                            <TableCell align = 'center'>{row.loss}</TableCell>\n                            <TableCell align = 'center'>{row.winPctV2}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nLeaderboardsTable.prototype = {\n    name: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.shape({\n        name:     PropTypes.string,\n        win:      PropTypes.string,\n        loss:     PropTypes.string,\n        winPctV2: PropTypes.string,\n    })),\n};\n\nexport default LeaderboardsTable;\n","import React from 'react';\nimport { useSelector} from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport LeaderboardsTable from '../leaderboardsTable';\n\nconst LeaderboardsWrap = () => {\n    const {standingsConference} = useSelector((state) => state.stats);\n    const {east, west} = standingsConference;\n\n    const normalizeTableData = (arr) => {\n        return arr.map((\n            {win, loss, winPctV2, teamSitesOnly},\n        ) => ({win, loss, winPctV2, name: teamSitesOnly.teamTricode}));\n    };\n\n    return (\n        <Grid\n            container\n            justify = 'center'\n            spacing = { 2 }>\n            <Grid\n                item\n                xs = { 6 }>\n                <LeaderboardsTable\n                    data = { normalizeTableData(east) }\n                    name = 'East'\n                />\n            </Grid>\n            <Grid\n                item\n                xs = { 6 }>\n                <LeaderboardsTable\n                    data = { normalizeTableData(west) }\n                    name = 'West'\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default LeaderboardsWrap;\n","// General\n\nexport const START_LOADING = 'START_LOADING';\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\n//Stats\n\nexport const SET_GAMES_BY_DAY = 'SET_GAMES_BY_DAY';\nexport const SET_GAME_DETAILS = 'SET_GAME_DETAILS';\nexport const SET_STANDINGS_CONFERENCE = 'SET_STANDINGS_CONFERENCE';\n","import { urlConstants } from '../constants';\n\n// Private functions\nconst callApi = (endpoint) => {\n    const url = `${urlConstants.API_BASE}/${endpoint}`;\n\n    return fetch(url)\n        .then((res) => {\n            return res.text();\n        })\n        .then((data) => {\n            return JSON.parse(data);\n        });\n};\n\nexport const getMatchDetails = (date, gameId) => callApi(`v1/${date}/${gameId}_boxscore.json`);\nexport const getGamesByDay = (date) => callApi(`v2/${date}/scoreboard.json`);\nexport const getStandingsConference = () => callApi('v1/current/standings_conference.json');\n","import * as types from '../actionTypes';\nimport * as Api from '../../api/api';\n\nexport const fetchGamesByDay = (date) => async (dispatch) => {\n    dispatch({type: types.START_LOADING});\n\n    const {games} = await Api.getGamesByDay(date);\n\n    dispatch({type: types.SET_GAMES_BY_DAY, gamesByDay: games});\n    dispatch({type: types.FINISH_LOADING});\n};\n\nexport const fetchMatchDetails = (date, gameId) => async (dispatch) => {\n    dispatch({type: types.START_LOADING});\n\n    const {basicGameData} = await Api.getMatchDetails(date, gameId);\n\n    dispatch({type: types.SET_GAME_DETAILS, matchDetails: basicGameData});\n    dispatch({type: types.FINISH_LOADING});\n};\n\nexport const fetchStandingsConference = () => async (dispatch) => {\n    dispatch({type: types.START_LOADING});\n\n    const {league} = await Api.getStandingsConference();\n\n    dispatch(\n        {type: types.SET_STANDINGS_CONFERENCE, standingsConference: league.standard.conference},\n    );\n    dispatch({type: types.FINISH_LOADING});\n};\n","import React, { useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport LeaderboardsWrap from '../../components/leaderboadrsWrap';\nimport * as stats from '../../redux/actions/stats';\n\nconst LeaderboardsPage = () => {\n    const {standingsConference} = useSelector((state) => state.stats);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getStandingsConference = async () => {\n            await dispatch(stats.fetchStandingsConference());\n        };\n        getStandingsConference();\n    }, []);\n\n    return Object.keys(standingsConference).length && (\n\n        <LeaderboardsWrap/>\n\n    );\n};\n\nexport default LeaderboardsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Grid } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nconst MatchesDate = ({today, date, handlerDate}) => {\n    let dateTitle = 'Matches';\n    if (date > today[ 0 ]) {\n        dateTitle = 'Upcoming Matches';\n    } else if (date < today[ 0 ]) {\n        dateTitle = 'Past Matches';\n    } else {\n        dateTitle = 'Today\\'s Matches';\n    }\n\n    return (\n        <CardContent >\n            <Grid\n                container\n                alignItems = 'center'\n                justify = 'center'>\n                <Grid\n                    item\n                    xs = { 1 }>\n                    <IconButton\n                        align = 'right'\n                        aria-label = 'Back'\n                        type = 'submit'\n                        onClick = { () => handlerDate(-1) }>\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                </Grid>\n                <Grid\n                    item\n                    xs = { 5 }>\n                    <Typography\n                        align = 'center'\n                        component = 'h2'\n                        variant = 'h5'>\n                        {date.toDateString()}\n                    </Typography>\n                </Grid>\n                <Grid\n                    item\n                    xs = { 1 }>\n                    <IconButton\n                        align = 'left'\n                        aria-label = 'Forward'\n                        type = 'submit'\n                        onClick = { () => handlerDate(1) }>\n                        <ArrowForwardIosIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Typography\n                align = 'center'\n                component = 'h3'\n                variant = 'h6'>\n                {dateTitle}\n            </Typography>\n        </CardContent>\n    );\n};\n\nMatchesDate.prototype = {\n    today:       PropTypes.object,\n    date:        PropTypes.object,\n    handlerDate: PropTypes.func,\n};\n\nexport default MatchesDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst MatchesItemTeam = ({win, loss, name, score  }) => {\n    return (\n\n        <CardContent >\n            <Typography\n                align = 'center'\n                color = 'textSecondary'\n                variant = 'subtitle1'>\n                {win} - {loss}\n            </Typography>\n            <Typography\n                align = 'center'\n                component = 'h4'\n                variant =\n                    'h6'>\n                {name}\n            </Typography>\n            <Typography\n                align = 'center'\n                color = 'textSecondary'\n                variant = 'subtitle1'>\n                {score}\n            </Typography>\n        </CardContent>\n\n    );\n};\n\nMatchesItemTeam.prototype = {\n    win:   PropTypes.string,\n    loss:  PropTypes.string,\n    name:  PropTypes.string,\n    score: PropTypes.string,\n};\n\nexport default MatchesItemTeam;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport MatchesItemTeam from '../matchesItemTeam';\n\nconst MatchesItem = (\n    {   url,\n        date,\n        gameId,\n        hTeamWin, vTeamWin,\n        hTeamScore, vTeamScore,\n        hTeamName, vTeamName,\n        hTeamLoss, vTeamLoss,\n    },\n) => {\n    return (\n        <li\n            key = { gameId }>\n            <Link\n                className = 'link'\n                to = { `${url}/${date}/${gameId}` }>\n                <Grid\n                    container\n                    alignItems = 'center'\n                    className = 'link-hover'>\n                    <Grid\n                        item\n                        xs = { 5 }>\n                        <MatchesItemTeam\n                            loss = { hTeamLoss }\n                            name = { hTeamName }\n                            score = { hTeamScore }\n                            win = { hTeamWin }\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        xs = { 2 }>\n                        <CardContent >\n                            <Typography\n                                align = 'center'\n                                color = 'textSecondary'\n                                variant = 'h6'>\n                                END\n                            </Typography>\n                        </CardContent>\n                    </Grid>\n                    <Grid\n                        item\n                        xs = { 5 }>\n                        <MatchesItemTeam\n                            loss = { vTeamLoss }\n                            name = { vTeamName }\n                            score = { vTeamScore }\n                            win = { vTeamWin }\n                        />\n                    </Grid>\n                </Grid>\n            </Link>\n        </li>\n    );\n};\n\nMatchesItem.prototype = {\n    date:       PropTypes.string,\n    url:        PropTypes.string,\n    gameId:     PropTypes.string,\n    hTeamWin:   PropTypes.string,\n    vTeamWin:   PropTypes.string,\n    hTeamScore: PropTypes.string,\n    vTeamScore: PropTypes.string,\n    hTeamName:  PropTypes.string,\n    vTeamName:  PropTypes.string,\n    hTeamLoss:  PropTypes.string,\n    vTeamLoss:  PropTypes.string,\n};\n\nexport default MatchesItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useRouteMatch} from 'react-router-dom';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport MatchesItem from '../matchesItem';\nimport { TEAM_NAMES } from '../../constants';\n\nconst MatchesList = ({data, date}) => {\n    let { url } = useRouteMatch();\n    const teamName = (triCode) => TEAM_NAMES[ triCode ];\n\n    return  data.length ? (\n        <List\n            aria-label = 'main list matches'\n            className = 'matches__list'\n            component = 'ul'>\n            {data.map(({gameId, hTeam, vTeam }) => (\n                <MatchesItem\n                    date = { date }\n                    gameId = { gameId }\n                    hTeamLoss = { hTeam.loss }\n                    hTeamName = { teamName(hTeam.triCode) }\n                    hTeamScore = { hTeam.score }\n                    hTeamWin = { hTeam.win }\n                    url = { url }\n                    vTeamLoss = { vTeam.loss }\n                    vTeamName = { teamName(vTeam.triCode) }\n                    vTeamScore = { vTeam.score }\n                    vTeamWin = { vTeam.win }\n                />\n            ))}\n        </List>\n\n    ) : (\n        <CardContent >\n            <Typography\n                align = 'center'\n                variant = 'h5'>\n                No Games Today\n            </Typography>\n        </CardContent>\n    );\n};\n\nMatchesList.prototype = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    date: PropTypes.string,\n};\n\nexport default MatchesList;\n","import React, { useEffect, useState } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport * as stats from '../../redux/actions/stats';\nimport Card from '@material-ui/core/Card';\nimport { Container } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport MatchesDate from '../../components/matchesDate';\nimport MatchesList from '../../components/matchesList';\nimport { urlConstants } from '../../constants';\n\nconst MatchesPage = () => {\n    const today = useState(new Date());\n    const [ date, setHandlerDate ] = useState(new Date());\n    const {gamesByDay} = useSelector((state) => state.stats);\n    const dispatch = useDispatch();\n\n    const handlerDate = (offset) => {\n        const changeDate = date.getDate() + offset;\n        const updatedDate = new Date(date.setDate(changeDate));\n        setHandlerDate(updatedDate);\n    };\n\n    let dateToRequest = urlConstants.FORMAT_DATE(date);\n\n    useEffect(() => {\n        const getGamesByDay = async () => {\n            await dispatch(stats.fetchGamesByDay(dateToRequest));\n        };\n        getGamesByDay();\n    }, [ date ]);\n\n    return (\n        <Container\n            maxWidth = 'sm'>\n            <Card\n                variant = 'outlined'>\n                <MatchesDate\n                    date = { date }\n                    handlerDate = { (offset) => handlerDate(offset) }\n                    today = { today }\n                />\n                <Divider />\n                <MatchesList\n                    data = { gamesByDay }\n                    date = { dateToRequest }\n                />\n            </Card>\n        </Container>\n    );\n};\n\nexport default MatchesPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst MatchTeam = ({name, imgUrl, win, loss, triCode }) => {\n    const teamWinLoss = `${win} - ${loss}`;\n\n    return (\n        <CardContent className = 'link-hover'>\n            <Link\n                className = 'link'\n                to = { `/teams/${triCode.toLowerCase()}` }>\n                <Typography\n                    align = 'center'\n                    variant = 'h5'>\n                    {name}\n                </Typography>\n                <CardMedia\n                    className = 'matchTeam-logo'\n                    image = { imgUrl }\n                    title = 'HomeTeam'\n                />\n                <Typography\n                    align = 'center'\n                    color = 'textSecondary'\n                    variant = 'subtitle1'>\n                    {teamWinLoss}\n                </Typography>\n            </Link>\n        </CardContent>\n    );\n};\n\nMatchTeam.prototype = {\n    name:   PropTypes.string,\n    imgUrl: PropTypes.string,\n    win:    PropTypes.string,\n    loss:   PropTypes.string,\n};\n\nexport default MatchTeam;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport MatchTeam from '../../components/matchTeam';\nimport { TEAM_NAMES, urlConstants } from '../../constants';\n\nconst MatchStats = (\n    {hTeamTriCode, vTeamTriCode, score, hTeamLoss, hTeamWin, vTeamLoss, vTeamWin },\n) => {\n    return (\n        <Grid\n            container\n            alignItems = 'center'\n            justify = 'center'\n            spacing = { 0 }>\n            <Grid\n                item\n                xs = { 3 }>\n                <MatchTeam\n                    imgUrl = { urlConstants.GET_TEAM_LOGO(hTeamTriCode) }\n                    loss = { hTeamLoss }\n                    name = { TEAM_NAMES[ hTeamTriCode ] }\n                    triCode = { hTeamTriCode }\n                    win = { hTeamWin }\n                />\n            </Grid>\n            <Grid\n                item\n                xs = { 3 }>\n                <CardContent>\n                    <Typography\n                        align = 'center'\n                        color = 'textSecondary'\n                        variant = 'h6'>\n                        Final\n                    </Typography>\n                    <Typography\n                        align = 'center'\n                        variant = 'h4'>\n                        {score}\n                    </Typography>\n                </CardContent>\n            </Grid>\n            <Grid\n                item\n                xs = { 3 }>\n                <MatchTeam\n                    imgUrl = { urlConstants.GET_TEAM_LOGO(vTeamTriCode) }\n                    loss = { vTeamLoss }\n                    name = { TEAM_NAMES[ vTeamTriCode ] }\n                    triCode = { vTeamTriCode }\n                    win = { vTeamWin }\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nMatchStats.prototype = {\n    hTeamTriCode: PropTypes.string,\n    vTeamTriCode: PropTypes.string,\n    score:        PropTypes.string,\n    period:       PropTypes.string,\n    hTeamWin:     PropTypes.string,\n    vTeamWin:     PropTypes.string,\n    hTeamLoss:    PropTypes.string,\n    vTeamLoss:    PropTypes.string,\n};\n\nexport default MatchStats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst MatchPeriodStats = ({data}) => {\n    return (\n        <TableContainer\n            className = 'matchPeriodStats-container'\n            component = { Paper }>\n            <Table\n                aria-label = 'table'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Team</TableCell>\n                        <TableCell align = 'right'>P1</TableCell>\n                        <TableCell align = 'right'>P2</TableCell>\n                        <TableCell align = 'right'>P3</TableCell>\n                        <TableCell align = 'right'>P4</TableCell>\n                        <TableCell align = 'right'>Total</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((row) => (\n                        <TableRow key = { row.triCode }>\n                            <TableCell\n                                component = 'th'\n                                scope = 'row'>\n                                {row.triCode}\n                            </TableCell>\n                            <TableCell align = 'right'>{row.P1}</TableCell>\n                            <TableCell align = 'right'>{row.P2}</TableCell>\n                            <TableCell align = 'right'>{row.P3}</TableCell>\n                            <TableCell align = 'right'>{row.P4}</TableCell>\n                            <TableCell align = 'right'>{row.score}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nMatchPeriodStats.prototype = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        P1:      PropTypes.string,\n        P2:      PropTypes.string,\n        P3:      PropTypes.string,\n        P4:      PropTypes.string,\n        triCode: PropTypes.string,\n        score:   PropTypes.string,\n    })),\n};\n\nexport default MatchPeriodStats;\n","import React from 'react';\nimport { useSelector} from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport MatchStats from '../matchStats';\nimport MatchPeriodStats from '../matchPeriodStats';\n\nconst MatchDetailsWrap = () => {\n    const {matchDetails} = useSelector((state) => state.stats);\n    const {hTeam, vTeam} = matchDetails;\n    const {\n        score: hTeamScore,\n        triCode: hTeamTriCode,\n        linescore: hTeamLinescore,\n        win: hTeamWin,\n        loss: hTeamLoss} = hTeam;\n    const {\n        score: vTeamScore,\n        triCode: vTeamTriCode,\n        linescore: vTeamLinescore,\n        win: vTeamWin,\n        loss: vTeamLoss} = vTeam;\n\n    const normalizeTeamLinescore = (linescore) => {\n        return linescore.reduce((acc, item, idx) => {\n            const periodName = `P${idx + 1}`;\n\n            return {...acc, [ periodName ]: item.score};\n        }, {});\n    };\n\n    const updatedHTeamLinescore = {\n        ...normalizeTeamLinescore(hTeamLinescore),\n        triCode: hTeamTriCode,\n        score:   hTeamScore,\n    };\n    const updatedVTeamLinescore = {\n        ...normalizeTeamLinescore(vTeamLinescore),\n        triCode: vTeamTriCode,\n        score:   vTeamScore,\n    };\n\n    const matchScore = `${hTeamScore} - ${vTeamScore}`;\n\n    return matchDetails.statusNum === 3 ? (\n        <>\n            <MatchStats\n                clock = { '--' }\n                hTeamLoss = { hTeamLoss }\n                hTeamTriCode = { hTeamTriCode }\n                hTeamWin = { hTeamWin }\n                score = { matchScore }\n                vTeamLoss = { vTeamLoss }\n                vTeamTriCode = { vTeamTriCode }\n                vTeamWin = { vTeamWin }\n            />\n            <Container maxWidth = 'sm'>\n                <MatchPeriodStats\n                    data = { [ updatedHTeamLinescore, updatedVTeamLinescore ] }\n                />\n            </Container>\n        </>\n    ) : (\n        <CardContent >\n            <Typography\n                align = 'center'\n                className = 'matches__error'\n                variant = 'h5'>\n                The game is not over\n            </Typography>\n        </CardContent>\n    );\n};\n\nexport default MatchDetailsWrap;\n","import React, { useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport * as stats from '../../redux/actions/stats';\nimport {useRouteMatch} from 'react-router-dom';\nimport MatchDetailsWrap from '../../components/matchDetailsWrap';\n\nconst MatchDetailsPage = () => {\n    const {params} = useRouteMatch();\n    const {matchDetails} = useSelector((state) => state.stats);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const {date, gameId} = params;\n\n        const getMatchDetails = async () => {\n            await dispatch(stats.fetchMatchDetails(date, gameId));\n        };\n        getMatchDetails();\n    }, [ params ]);\n\n    return Object.keys(matchDetails).length && (\n        <MatchDetailsWrap/>\n    );\n};\n\nexport default MatchDetailsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst TeamDetailsItem = ({name, imgUrl}) => {\n    return (\n        <CardContent>\n            <Typography\n                align = 'center'\n                variant = 'h5'>\n                {name}\n            </Typography>\n            <CardMedia\n                className = 'matchTeam-logo'\n                image = { imgUrl }\n                title = { `${name} team logo` }\n            />\n        </CardContent>\n    );\n};\n\nTeamDetailsItem.prototype = {\n    name:   PropTypes.string,\n    imgUrl: PropTypes.string,\n};\n\nexport default TeamDetailsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport Typography from '@material-ui/core/Typography';\nimport { CardContent, Grid } from '@material-ui/core';\n\nconst TeamDetailsItem = ({name, points, chartValue}) => {\n    const normalizeChartData = [{ value: Number(chartValue), color: '#1976d2' }];\n\n    return (\n        <CardContent>\n            <Grid\n                container\n                alignItems = 'center'\n                spacing = { 0 }>\n                <Grid\n                    item\n                    xs = { 10 }>\n                    <Typography\n                        color = 'textSecondary'\n                        variant = 'h6'>\n                        {name}\n                    </Typography>\n                </Grid>\n                <Grid\n                    item\n                    xs = { 2 }>\n                    {points && (\n                        <Typography\n                            align = 'center'\n                            variant = 'h6'>\n                            {points}\n                        </Typography>\n                    )}\n                    {chartValue && (\n                        <div\n                            data-for = 'chart'\n                            data-tip = ''>\n                            <PieChart\n                                data = { normalizeChartData }\n                                label = { ({ dataEntry }) => dataEntry.value + '%' }\n                                labelPosition = { 0 }\n                                labelStyle = {{\n                                    fontSize:   '30px',\n                                    fontFamily: '\"Roboto\", sans-serif',\n                                    fill:       '#1976d2',\n                                }}\n                                lineWidth = { 20 }\n                                startAngle = { -90 }\n                                totalValue = { 100 }\n                            />\n                        </div>\n                    )}\n                </Grid>\n            </Grid>\n        </CardContent>\n    );\n};\n\nTeamDetailsItem.prototype = {\n    name:       PropTypes.string,\n    points:     PropTypes.string,\n    chartValue: PropTypes.string,\n};\n\nexport default TeamDetailsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Paper } from '@material-ui/core';\nimport TeamDetailsTitle from '../teamDetailsTitle';\nimport TeamDetailsItem from '../teamDetailsItem';\nimport { TEAM_NAMES, urlConstants } from '../../constants';\n\nconst TeamDetailsWrap = ({teamInfo}) => {\n    const {teamSitesOnly, loss, win, winPctV2} = teamInfo;\n    const {teamTricode} = teamSitesOnly;\n    const playedMatches = String(Number(loss) + Number(win));\n\n    return (\n        <Paper>\n            <Grid\n                container\n                alignItems = 'center'\n                justify = 'center'\n                spacing = { 0 }>\n                <Grid\n                    item\n                    xs = { 4 }>\n                    <TeamDetailsTitle\n                        imgUrl = { urlConstants.GET_TEAM_LOGO(teamTricode) }\n                        name = { TEAM_NAMES[ teamTricode ] }\n                    />\n                </Grid>\n                <Grid\n                    item\n                    xs = { 8 }>\n                    <Grid\n                        container\n                        alignItems = 'center'\n                        justify = 'center'\n                        spacing = { 0 }>\n                        <Grid\n                            item\n                            xs = { 6 }>\n                            <TeamDetailsItem\n                                name = 'Played Matches'\n                                points = { playedMatches }\n                            />\n                        </Grid>\n                        <Grid\n                            item\n                            xs = { 6 }>\n                            <TeamDetailsItem\n                                name = 'Number Of Victories'\n                                points = { win }\n                            />\n                        </Grid>\n                        <Grid\n                            item\n                            xs = { 6 }>\n                            <TeamDetailsItem\n                                name = 'Number Of Losses'\n                                points = { loss }\n                            />\n                        </Grid>\n                        <Grid\n                            item\n                            xs = { 6 }>\n                            <TeamDetailsItem\n                                chartValue = { winPctV2 }\n                                name = 'Percentage Of Winnings In Match Played'\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nTeamDetailsWrap.prototype = {\n    teamInfo: PropTypes.object,\n};\n\nexport default TeamDetailsWrap;\n","import React, { useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch} from 'react-redux';\nimport * as stats from '../../redux/actions/stats';\nimport TeamDetailsWrap from '../../components/teamDetailsWrap';\n\nconst TeamDetailsPage = () => {\n    const dispatch = useDispatch();\n    const { params } = useRouteMatch();\n    const { triCode } = params;\n    const { standingsConference } = useSelector((state) => state.stats);\n    const { east, west } = standingsConference;\n    const teamsStats = [ ...east, ...west ];\n\n    const currentTeam = teamsStats.find((team) =>  {\n        return triCode === team.teamSitesOnly.teamTricode.toLowerCase();\n    }) || {};\n\n    useEffect(() => {\n        if (east.length || west.length) {\n            return;\n        }\n        const getStandingsConference = async () => {\n            await dispatch(stats.fetchStandingsConference());\n        };\n        getStandingsConference();\n    }, []);\n\n    return Object.keys(currentTeam).length && (\n        <TeamDetailsWrap\n            teamInfo = { currentTeam }\n        />\n    );\n};\n\nexport default TeamDetailsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\n\nconst Header = () => {\n    return (\n        <Grid\n            container\n            alignItems = 'center'\n            justify = 'center'\n            spacing = { 3 }\n            style = {{ padding: 30 }} >\n            <Button\n                color = 'primary'\n                component = { Link }\n                key = 'matches'\n                style = {{ margin: 20 }}\n                to = '/matches'>\n                Matches\n            </Button>\n            <Button\n                color = 'primary'\n                component = { Link }\n                key = 'leaderboards'\n                style = {{ margin: 20 }}\n                to = '/leaderboards'>\n                Leaderboards\n            </Button>\n        </Grid>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './index.css';\nconst Loading = () => {\n    const {isLoading} = useSelector((state) => state.general);\n    const activeClassName = isLoading ? 'active' : '';\n\n    return (\n        <div className = { `loading ${activeClassName}` }>\n            <CircularProgress/>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport { Typography } from '@material-ui/core';\nimport LeaderboardsPage from './pages/leaderboardsPage';\nimport MatchesPage from './pages/matchesPage';\nimport MatchDetailsPage from './pages/matchDetailsPage';\nimport TeamDetailsPage from './pages/teamDetailsPage';\nimport Header from './components/header';\nimport Loading from './components/loading';\nimport './index.scss';\n\nconst App = () => {\n    return (\n        <Container maxWidth = 'md'>\n            <Router>\n                <Loading/>\n                <Header/>\n                <Switch>\n                    <Route\n                        exact\n                        key = '/'\n                        path = '/'>\n                        <Typography\n                            align = 'center'\n                            variant = 'h1'>\n                            NBA Stats App\n                        </Typography>\n                    </Route>\n                    <Route\n                        exact\n                        key = 'matches'\n                        path = '/matches'>\n                        <MatchesPage />\n                    </Route>\n                    <Route\n                        exact\n                        key = 'matchDetails'\n                        path = '/matches/:date/:gameId'>\n                        <MatchDetailsPage />\n                    </Route>\n                    <Route\n                        exact\n                        key = 'leaderboards'\n                        path = '/leaderboards'>\n                        <LeaderboardsPage />\n                    </Route>\n                    <Route\n                        exact\n                        key = 'teamDetails'\n                        path = '/teams/:triCode'>\n                        <TeamDetailsPage />\n                    </Route>\n                </Switch>\n            </Router>\n        </Container>\n    );\n};\n\nexport default App;\n","import * as types from '../actionTypes';\n\nconst initialState = {\n    gamesByDay:          [],\n    matchDetails:        {},\n    standingsConference: {\n        east: [],\n        west: [],\n    },\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.SET_GAMES_BY_DAY: {\n            return {\n                ...state,\n                gamesByDay: action.gamesByDay,\n                statsError: false,\n            };\n        }\n\n        case types.SET_GAME_DETAILS: {\n            return {\n                ...state,\n                matchDetails: action.matchDetails,\n                statsError:   false,\n            };\n        }\n\n        case types.SET_STANDINGS_CONFERENCE: {\n            return {\n                ...state,\n                standingsConference: action.standingsConference,\n            };\n        }\n\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n","import * as types from '../actionTypes';\n\nconst initialState = {\n    isLoading: false,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.START_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            };\n\n        case types.FINISH_LOADING:\n            return {\n                ...state,\n                isLoading: false,\n            };\n\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n","import React from 'react';\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport statsReducer from './reducers/stats';\nimport generalReducer from './reducers/general';\n\nconst rootReducer = combineReducers({\n    stats:   statsReducer,\n    general: generalReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(ReduxThunk)),\n);\n\nconst InitStore = ({ children }) => (\n    <Provider store = { store }>\n        {children}\n    </Provider>\n);\n\nexport default InitStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport InitStore from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <InitStore>\n            <App />\n        </InitStore>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}